{"version":3,"sources":["utils/utils.js","contexts.js","styles/base/variable.js","routes/index.js","App.js","index.js","WebAPI.js"],"names":["setAuthToken","token","localStorage","setItem","getAuthToken","getItem","AuthContext","createContext","theme","main","$colorWhite","$colorRed","$colorLightGreen","$colorGreen","$colorLightOrange","$colorYellow","$colorGrey","$colorLightGrey","$borderRadius","$fontFamily","weatherCardBackgroundColor","weatherCardColor","weatherCardHighLight","dark","Home","lazy","FindActivity","Activity","NewActivity","Login","Profile","Routes","fallback","exact","path","component","App","useState","activityData","setActivityData","fetchActivityData","useCallback","a","Promise","all","fetchMoviesData","fetchMusicPerformanceData","fetchParentChildActivityData","fetchLectureData","fetchExhibitionData","moviesData","musicPerformanceData","parentChildActivityData","lectureData","exhibitionData","useEffect","modifiedData","useMemo","filter","data","imageUrl","map","index","id","user","setUser","getMe","then","response","ok","Provider","value","ReactDOM","render","document","getElementById","fetch","json","LIDEMY_BASE_URL","login","username","password","method","headers","body","JSON","stringify","res","register","nickname","authorization"],"mappings":"uGAAA,wEAEaA,EAAe,SAACC,GAC3BC,aAAaC,QAHI,QAGgBF,IAGtBG,EAAe,WAC1B,OAAOF,aAAaG,QAPH,W,gCCAnB,6CAEaC,EAAcC,wBAAc,O,gCCwB1BC,IA1BD,CACZC,KAAM,CACJC,YAAa,UACbC,UAAW,UACXC,iBAAkB,UAClBC,YAAa,UACbC,kBAAmB,UACnBC,aAAc,UAEdC,WAAY,OACZC,gBAAiB,OAEjBC,cAAe,SACfC,YAAa,6BAEbC,2BAA4B,OAC5BC,iBAAkB,OAClBC,qBAAsB,QAExBC,KAAM,CACJH,2BAA4B,OAC5BC,iBAAkB,OAClBC,qBAAsB,U,6LCpBpBE,EAAOC,gBAAK,kBAAM,oEAClBC,EAAeD,gBAAK,kBAAM,oEAC1BE,EAAWF,gBAAK,kBAAM,oEACtBG,EAAcH,gBAAK,kBAAM,iCACzBI,EAAQJ,gBAAK,kBAAM,+DACnBK,EAAUL,gBAAK,kBAAM,kCAiBZM,EAfA,WACb,OACE,kBAAC,WAAD,CAAUC,SAAU,+BAClB,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAOC,OAAK,EAACC,KAAK,IAAIC,UAAWX,IACjC,kBAAC,IAAD,CAAOU,KAAK,iBAAiBC,UAAWT,IACxC,kBAAC,IAAD,CAAOQ,KAAK,gBAAgBC,UAAWR,IACvC,kBAAC,IAAD,CAAOO,KAAK,gBAAgBC,UAAWP,IACvC,kBAAC,IAAD,CAAOM,KAAK,cAAcC,UAAWN,IACrC,kBAAC,IAAD,CAAOK,KAAK,gBAAgBC,UAAWL,O,+CC4DhCM,EA7DH,WAAO,IAAD,EACwBC,mBAAS,IADjC,mBACTC,EADS,KACKC,EADL,KAEVC,EAAoBC,sBAAW,sBAAC,wCAAAC,EAAA,sEAO1BC,QAAQC,IAAI,CACpBC,cACAC,cACAC,cACAC,cACAC,gBAZkC,mCAElCC,EAFkC,KAGlCC,EAHkC,KAIlCC,EAJkC,KAKlCC,EALkC,KAMlCC,EANkC,KAepCf,EAAgB,GAAD,mBACVW,GADU,YAEVC,GAFU,YAGVC,GAHU,YAIVC,GAJU,YAKVC,KApB+B,4CAsBnC,IAEHC,qBAAU,WACRf,MACC,CAACA,IAEJ,IAAMgB,EAAeC,mBAAQ,kBAC3BnB,EACGoB,QAAO,SAACC,GAAD,MAA4B,KAAlBA,EAAKC,YACtBC,KAAI,SAACF,EAAMG,GAEV,OADAH,EAAKI,GAAKD,EACHH,QAnCG,EAuCQtB,mBAAS,MAvCjB,mBAuCT2B,EAvCS,KAuCHC,EAvCG,KAkDhB,OAVAV,qBAAU,WACe,OAAnBnD,eACF8D,cAAQC,MAAK,SAACC,GACQ,IAAhBA,EAASC,IACXJ,EAAQG,EAAST,WAItB,IAGD,kBAAC,IAAYW,SAAb,CAAsBC,MAAO,CAAEP,OAAMC,UAAST,iBAC5C,kBAAC,IAAD,CAAehD,MAAOA,IAAMC,MAC1B,kBAAC,IAAD,KACE,kBAAC,EAAD,UCnEV+D,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,U,+BCJjD,4RA6Ea1B,EAAsB,WACjC,OAAO2B,MAAM,GAAD,OAnEZ,+FAoEGT,MAAK,SAACC,GAAD,OAAcA,EAASS,UAC5BV,MAAK,SAACR,GACL,OAAOA,MAIAZ,EAA+B,WAC1C,OAAO6B,MAAM,GAAD,OAzEZ,+FA0EGT,MAAK,SAACC,GAAD,OAAcA,EAASS,UAC5BV,MAAK,SAACR,GACL,OAAOA,MAIAd,EAAkB,WAC7B,OAAO+B,MAAM,GAAD,OA/EZ,+FAgFGT,MAAK,SAACC,GAAD,OAAcA,EAASS,UAC5BV,MAAK,SAACR,GACL,OAAOA,MAIAb,EAA4B,WACvC,OAAO8B,MAAM,GAAD,OArFZ,+FAsFGT,MAAK,SAACC,GAAD,OAAcA,EAASS,UAC5BV,MAAK,SAACR,GACL,OAAOA,MAIAX,EAAmB,WAC9B,OAAO4B,MAAM,GAAD,OA3FZ,+FA4FGT,MAAK,SAACC,GAAD,OAAcA,EAASS,UAC5BV,MAAK,SAACR,GACL,OAAOA,MAcPmB,EAAkB,qCAQXC,EAAQ,SAACC,EAAUC,GAC9B,OAAOL,MAAM,GAAD,OAAIE,EAAJ,UAA6B,CACvCI,OAAQ,OACRC,QAAS,CACP,eAAgB,oBAElBC,KAAMC,KAAKC,UAAU,CACnBN,WACAC,eAEDd,MAAK,SAACoB,GAAD,OAASA,EAAIV,WAGVW,EAAW,SAACC,EAAUT,EAAUC,GAC3C,OAAOL,MAAM,GAAD,OAAIE,EAAJ,aAAgC,CAC1CI,OAAQ,OACRC,QAAS,CACP,eAAgB,oBAElBC,KAAMC,KAAKC,UAAU,CACnBG,WACAT,WACAC,eAEDd,MAAK,SAACoB,GAAD,OAASA,EAAIV,WAGVX,EAAQ,WACnB,IAAMjE,EAAQG,cACd,OAAOwE,MAAM,GAAD,OAAIE,EAAJ,OAA0B,CACpCK,QAAS,CACPO,cAAc,UAAD,OAAYzF,MAE1BkE,MAAK,SAACoB,GAAD,OAASA,EAAIV,a","file":"static/js/main.98a6be84.chunk.js","sourcesContent":["const TOKEN_NAME = \"token\";\r\n\r\nexport const setAuthToken = (token) => {\r\n  localStorage.setItem(TOKEN_NAME, token);\r\n};\r\n\r\nexport const getAuthToken = () => {\r\n  return localStorage.getItem(TOKEN_NAME);\r\n};\r\n","import { createContext } from \"react\";\r\n\r\nexport const AuthContext = createContext(null);\r\n","const theme = {\r\n  main: {\r\n    $colorWhite: \"#f8f8f8\",\r\n    $colorRed: \"#e6756B\",\r\n    $colorLightGreen: \"#c4c88f\",\r\n    $colorGreen: \"#8b8974\",\r\n    $colorLightOrange: \"#fae1d2\",\r\n    $colorYellow: \"#F9d893\",\r\n\r\n    $colorGrey: \"#777\",\r\n    $colorLightGrey: \"#aaa\",\r\n\r\n    $borderRadius: \"0.5rem\",\r\n    $fontFamily: \"'Varela Round', 'cwTeXYen'\",\r\n\r\n    weatherCardBackgroundColor: \"#eee\",\r\n    weatherCardColor: \"#666\",\r\n    weatherCardHighLight: \"#555\",\r\n  },\r\n  dark: {\r\n    weatherCardBackgroundColor: \"#666\",\r\n    weatherCardColor: \"#ddd\",\r\n    weatherCardHighLight: \"#fff\",\r\n  },\r\n};\r\n\r\nexport default theme;\r\n","import React, { Suspense, lazy } from \"react\";\nimport { HashRouter as Switch, Route } from \"react-router-dom\";\nconst Home = lazy(() => import(\"../pages/Home\"));\nconst FindActivity = lazy(() => import(\"../pages/FindActivity\"));\nconst Activity = lazy(() => import(\"../pages/Activity\"));\nconst NewActivity = lazy(() => import(\"../pages/NewActivity\"));\nconst Login = lazy(() => import(\"../pages/Login\"));\nconst Profile = lazy(() => import(\"../pages/Profile\"));\n\nconst Routes = () => {\n  return (\n    <Suspense fallback={<div></div>}>\n      <Switch>\n        <Route exact path=\"/\" component={Home} />\n        <Route path=\"/find-activity\" component={FindActivity} />\n        <Route path=\"/activity/:id\" component={Activity} />\n        <Route path=\"/new-activity\" component={NewActivity} />\n        <Route path=\"/login-page\" component={Login} />\n        <Route path=\"/profile-page\" component={Profile} />\n      </Switch>\n    </Suspense>\n  );\n};\n\nexport default Routes;\n","import React, { useState, useEffect, useCallback, useMemo } from \"react\";\nimport Routes from \"./routes\";\nimport { HashRouter as Router } from \"react-router-dom\";\nimport \"./styles/main.sass\";\nimport { ThemeProvider } from \"emotion-theming\";\nimport theme from \"./styles/base/variable\";\nimport { AuthContext } from \"../src/contexts\";\nimport { getAuthToken } from \"./utils/utils\";\nimport {\n  fetchExhibitionData,\n  fetchParentChildActivityData,\n  fetchMoviesData,\n  fetchMusicPerformanceData,\n  fetchLectureData,\n  getMe,\n} from \"../src/WebAPI\";\n\nconst App = () => {\n  const [activityData, setActivityData] = useState([]);\n  const fetchActivityData = useCallback(async () => {\n    const [\n      moviesData,\n      musicPerformanceData,\n      parentChildActivityData,\n      lectureData,\n      exhibitionData,\n    ] = await Promise.all([\n      fetchMoviesData(),\n      fetchMusicPerformanceData(),\n      fetchParentChildActivityData(),\n      fetchLectureData(),\n      fetchExhibitionData(),\n    ]);\n\n    setActivityData([\n      ...moviesData,\n      ...musicPerformanceData,\n      ...parentChildActivityData,\n      ...lectureData,\n      ...exhibitionData,\n    ]);\n  }, []);\n\n  useEffect(() => {\n    fetchActivityData();\n  }, [fetchActivityData]);\n\n  const modifiedData = useMemo(() =>\n    activityData\n      .filter((data) => data.imageUrl !== \"\")\n      .map((data, index) => {\n        data.id = index;\n        return data;\n      })\n  );\n\n  const [user, setUser] = useState(null);\n  useEffect(() => {\n    if (getAuthToken() !== null) {\n      getMe().then((response) => {\n        if (response.ok === 1) {\n          setUser(response.data);\n        }\n      });\n    }\n  }, []);\n\n  return (\n    <AuthContext.Provider value={{ user, setUser, modifiedData }}>\n      <ThemeProvider theme={theme.main}>\n        <Router>\n          <Routes />\n        </Router>\n      </ThemeProvider>\n    </AuthContext.Provider>\n  );\n};\n\nexport default App;\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport App from \"./App\";\r\n\r\nReactDOM.render(<App />, document.getElementById(\"root\"));\r\n","import { getAuthToken } from \"./utils/utils\";\r\n\r\n// const AUTHORIZATION_KEY = \"CWB-15DFF2FC-FFFB-49E9-BF7F-EBB9164F4B47\";\r\n// const CURRENT_WEATHER_BASE_URL =\r\n//   \"https://opendata.cwb.gov.tw/api/v1/rest/datastore/O-A0003-001?Authorization\";\r\n// const FORECAST_BASE_URL =\r\n//   \"https://opendata.cwb.gov.tw/api/v1/rest/datastore/F-C0032-001?Authorization\";\r\n// const LOCATION_NAME_FORECAST = \"臺北市\";\r\n// const LOCATION_NAME = \"臺北\";\r\n\r\nconst EXHIBITION_BASE_URL =\r\n  \"https://cloud.culture.tw/frontsite/trans/SearchShowAction.do?method=doFindTypeJ&category=6\";\r\nconst PARENT_CHILD_BASE_URL =\r\n  \"https://cloud.culture.tw/frontsite/trans/SearchShowAction.do?method=doFindTypeJ&category=4\";\r\nconst MOVIES_BASE_URL =\r\n  \"https://cloud.culture.tw/frontsite/trans/SearchShowAction.do?method=doFindTypeJ&category=8\";\r\nconst MUSIC_PERFORMANCE_BASE_URL =\r\n  \"https://cloud.culture.tw/frontsite/trans/SearchShowAction.do?method=doFindTypeJ&category=1\";\r\nconst LECTURE_BASE_URL =\r\n  \"https://cloud.culture.tw/frontsite/trans/SearchShowAction.do?method=doFindTypeJ&category=7\";\r\nconst VILLAGE_FOOD_BASE_URL =\r\n  \"https://data.coa.gov.tw/Service/OpenData/ODwsv/ODwsvTravelFood.aspx\";\r\n\r\n// export const fetchCurrentWeatherData = () => {\r\n//   return fetch(\r\n//     `${CURRENT_WEATHER_BASE_URL}=${AUTHORIZATION_KEY}&locationName=${LOCATION_NAME}`\r\n//   )\r\n//     .then((response) => response.json())\r\n//     .then((data) => {\r\n//       const locationData = data.records.location[0];\r\n//       const weatherElements = locationData.weatherElement.reduce(\r\n//         (neededElements, item) => {\r\n//           if ([\"WDSD\", \"TEMP\"].includes(item.elementName)) {\r\n//             neededElements[item.elementName] = item.elementValue;\r\n//           }\r\n//           return neededElements;\r\n//         },\r\n//         {}\r\n//       );\r\n\r\n//       return {\r\n//         observationTime: locationData.time.obsTime,\r\n//         locationName: locationData.locationName,\r\n//         temperature: weatherElements.TEMP,\r\n//         windSpeed: weatherElements.WDSD,\r\n//       };\r\n//     });\r\n// };\r\n\r\n// export const fetchForecastData = () => {\r\n//   return fetch(\r\n//     `${FORECAST_BASE_URL}=${AUTHORIZATION_KEY}&locationName=${LOCATION_NAME_FORECAST}`\r\n//   )\r\n//     .then((response) => response.json())\r\n//     .then((data) => {\r\n//       const locationData = data.records.location[0];\r\n//       const weatherElements = locationData.weatherElement.reduce(\r\n//         (neededElements, item) => {\r\n//           if ([\"Wx\", \"PoP\", \"CI\", \"MinT\", \"MaxT\"].includes(item.elementName)) {\r\n//             neededElements[item.elementName] = item.time[0].parameter;\r\n//           }\r\n//           return neededElements;\r\n//         },\r\n//         {}\r\n//       );\r\n\r\n//       return {\r\n//         description: weatherElements.Wx.parameterName,\r\n//         weatherCode: weatherElements.Wx.parameterValue,\r\n//         rainPossibility: weatherElements.PoP.parameterName,\r\n//         comfortability: weatherElements.CI.parameterName,\r\n//         minTemperature: weatherElements.MinT.parameterName,\r\n//         maxTemperature: weatherElements.MaxT.parameterName,\r\n//       };\r\n//     });\r\n// };\r\n\r\nexport const fetchExhibitionData = () => {\r\n  return fetch(`${EXHIBITION_BASE_URL}`)\r\n    .then((response) => response.json())\r\n    .then((data) => {\r\n      return data;\r\n    });\r\n};\r\n\r\nexport const fetchParentChildActivityData = () => {\r\n  return fetch(`${PARENT_CHILD_BASE_URL}`)\r\n    .then((response) => response.json())\r\n    .then((data) => {\r\n      return data;\r\n    });\r\n};\r\n\r\nexport const fetchMoviesData = () => {\r\n  return fetch(`${MOVIES_BASE_URL}`)\r\n    .then((response) => response.json())\r\n    .then((data) => {\r\n      return data;\r\n    });\r\n};\r\n\r\nexport const fetchMusicPerformanceData = () => {\r\n  return fetch(`${MUSIC_PERFORMANCE_BASE_URL}`)\r\n    .then((response) => response.json())\r\n    .then((data) => {\r\n      return data;\r\n    });\r\n};\r\n\r\nexport const fetchLectureData = () => {\r\n  return fetch(`${LECTURE_BASE_URL}`)\r\n    .then((response) => response.json())\r\n    .then((data) => {\r\n      return data;\r\n    });\r\n};\r\n\r\nexport const fetchVillageFoodData = () => {\r\n  return fetch(`${VILLAGE_FOOD_BASE_URL}`)\r\n    .then((response) => response.json())\r\n    .then((data) => {\r\n      return data;\r\n    });\r\n};\r\n\r\n// getPost, login, getMe\r\n\r\nconst LIDEMY_BASE_URL = \"https://student-json-api.lidemy.me\";\r\n\r\nexport const getPosts = () => {\r\n  return fetch(\r\n    `${LIDEMY_BASE_URL}/posts?_sort=createdAt&_order=desc`\r\n  ).then((response) => response.json());\r\n};\r\n\r\nexport const login = (username, password) => {\r\n  return fetch(`${LIDEMY_BASE_URL}/login`, {\r\n    method: \"POST\",\r\n    headers: {\r\n      \"content-type\": \"application/json\",\r\n    },\r\n    body: JSON.stringify({\r\n      username,\r\n      password,\r\n    }),\r\n  }).then((res) => res.json());\r\n};\r\n\r\nexport const register = (nickname, username, password) => {\r\n  return fetch(`${LIDEMY_BASE_URL}/register`, {\r\n    method: \"POST\",\r\n    headers: {\r\n      \"content-type\": \"application/json\",\r\n    },\r\n    body: JSON.stringify({\r\n      nickname,\r\n      username,\r\n      password,\r\n    }),\r\n  }).then((res) => res.json());\r\n};\r\n\r\nexport const getMe = () => {\r\n  const token = getAuthToken();\r\n  return fetch(`${LIDEMY_BASE_URL}/me`, {\r\n    headers: {\r\n      authorization: `Bearer ${token}`,\r\n    },\r\n  }).then((res) => res.json());\r\n};\r\n"],"sourceRoot":""}